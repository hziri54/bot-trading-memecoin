const fs = require('fs');
const path = require('path');
const { Keypair } = require('@solana/web3.js');

const walletsDir = path.resolve(__dirname, '../../wallets');
if (!fs.existsSync(walletsDir)) {
    fs.mkdirSync(walletsDir);
}

async function bienvenueCommand(ctx) {
    const userId = ctx.chat.id;
    const walletPath = path.join(walletsDir, `${userId}.json`);

    // ‚úÖ V√©rifie si l'utilisateur a d√©j√† un wallet
    if (fs.existsSync(walletPath)) {
        const walletData = JSON.parse(fs.readFileSync(walletPath, 'utf-8'));
        return ctx.reply(
            `üí∞ *Solana Wallet* ¬∑ üìà\n\n` +
            `üíº *Adresse:* \n\`${walletData.publicKey}\`\n\n` +  // üî• Copiable en un clic
            `üí≥ *Balance:* üîÑ V√©rification en cours...\n` +
            `‚Äî`,
            { parse_mode: 'Markdown' }
        );
    }

    // ‚úÖ G√©n√®re un nouveau wallet pour l'utilisateur
    const keypair = Keypair.generate();
    const privateKeyHex = Buffer.from(keypair.secretKey).toString('hex');

    const walletData = {
        publicKey: keypair.publicKey.toString(),
        privateKeyHex: privateKeyHex
    };

    fs.writeFileSync(walletPath, JSON.stringify(walletData, null, 2));

    // ‚úÖ Envoie le message avec les donn√©es copiable en 1 clic
    await ctx.reply(
        `‚úÖ *Bienvenue ! Votre wallet a √©t√© g√©n√©r√© !*\n\n` +
        `üíº *Adresse:* \n\`${walletData.publicKey}\`\n\n` +  // üî• Copiable en un clic
        `üîë *Cl√© priv√©e (dispara√Æt sous 1 min) :*\n\`${walletData.privateKeyHex}\`\n\n` +  // üî• Copiable en un clic
        `‚ö†Ô∏è *Sauvegardez votre cl√© priv√©e imm√©diatement !*\n` +
        `Elle sera supprim√©e pour des raisons de s√©curit√©.\n`,
        { parse_mode: 'Markdown' }
    );

    // ‚úÖ Suppression automatique de la cl√© priv√©e apr√®s 1 minute
    setTimeout(() => {
        if (fs.existsSync(walletPath)) {
            const savedWallet = JSON.parse(fs.readFileSync(walletPath, 'utf-8'));
            fs.writeFileSync(walletPath, JSON.stringify({ publicKey: savedWallet.publicKey }, null, 2));
            ctx.reply("üõë *Votre cl√© priv√©e a √©t√© supprim√©e pour des raisons de s√©curit√©.*", { parse_mode: 'Markdown' });
        }
    }, 60 * 1000);
}

module.exports = { bienvenueCommand };
