const { Keypair, Connection, PublicKey } = require('@solana/web3.js');
const fs = require('fs');
const path = require('path');

const walletsDir = path.resolve(__dirname, '../../wallets');
if (!fs.existsSync(walletsDir)) {
    fs.mkdirSync(walletsDir);
}

const createWalletCommand = async (ctx) => {
    const userId = ctx.chat.id;
    const walletPath = path.join(walletsDir, `${userId}.json`);

    // V√©rifier si un wallet existe d√©j√†
    if (fs.existsSync(walletPath)) {
        return ctx.reply("‚ö†Ô∏è Vous avez d√©j√† un wallet. Utilisez `/get_wallet` pour voir votre solde.");
    }

    // G√©n√©rer un nouveau wallet
    const keypair = Keypair.generate();
    const publicKey = keypair.publicKey.toString();
    const secretKey = Buffer.from(keypair.secretKey).toString('hex');

    // Sauvegarder le wallet comme wallet par d√©faut
    fs.writeFileSync(walletPath, JSON.stringify({ publicKey, secretKey }, null, 2));

    ctx.reply(`‚úÖ *Votre wallet par d√©faut a √©t√© cr√©√© !*\n\nüíº *Adresse publique:* \`${publicKey}\`\n\nUtilisez `/get_wallet` pour voir votre solde.`, {
        parse_mode: 'Markdown'
    });
};

module.exports = createWalletCommand;
